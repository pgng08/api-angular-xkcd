{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Classe xkcdService\nexport class XkcdService {\n  constructor(http) {\n    this.http = http;\n    this.urlDerniere = 'https://cors.jonathanmartel.info/?url=https://xkcd.com/info.0.json';\n    this.urlDebute = 'https://cors.jonathanmartel.info/?url=https://xkcd.com/';\n    this.urlFin = '/info.0.json';\n  }\n  /**\n   * Fonction qui execute le fetch a la base de donnees et recupere la derniere BD\n   * @returns\n   */\n  getDerniereBD() {\n    console.log('getDerniereBD...');\n    return this.http.get(this.urlDerniere);\n  }\n  getUneBD(num) {\n    console.log('getDerniereBD... ID ' + num);\n    return this.http.get(this.urlDebute + num + this.urlFin);\n  }\n  getAleatoireBD() {\n    let numAleatoire = Math.floor(Math.random() * 2768) + 1;\n    console.log('getAleatoireBD... ID: ' + numAleatoire);\n    return this.http.get(this.urlDebute + numAleatoire + this.urlFin);\n  }\n}\nXkcdService.ɵfac = function XkcdService_Factory(t) {\n  return new (t || XkcdService)(i0.ɵɵinject(i1.HttpClient));\n};\nXkcdService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: XkcdService,\n  factory: XkcdService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA;AACA,OAAM,MAAOA,WAAW;EAOtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,gBAAW,GACjB,oEAAoE;IAC9D,cAAS,GACf,yDAAyD;IACnD,WAAM,GAAW,cAAc;EAEA;EACzC;;;;EAIEC,aAAa;IACXC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAiB,IAAI,CAACC,WAAW,CAAC;EACxD;EAEAC,QAAQ,CAACC,GAAQ;IACfL,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGI,GAAG,CAAC;IACzC,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAM,IAAI,CAACI,SAAS,GAAGD,GAAG,GAAG,IAAI,CAACE,MAAM,CAAC;EAC/D;EAEAC,cAAc;IAEZ,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;IAEvDZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGQ,YAAY,CAAC;IAEpD,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAM,IAAI,CAACI,SAAS,GAAGG,YAAY,GAAG,IAAI,CAACF,MAAM,CAAC;EACxE;;;mBA7BWX,WAAW;AAAA;;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAJV;AAAM","names":["XkcdService","constructor","http","getDerniereBD","console","log","get","urlDerniere","getUneBD","num","urlDebute","urlFin","getAleatoireBD","numAleatoire","Math","floor","random","factory","providedIn"],"sourceRoot":"","sources":["/Users/pablo/Downloads/angular/examen_version_etudiant/examen-ng/src/app/xkcd/xkcd.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IBandeDessinee } from '../ibandedessinee';\n\n@Injectable({\n  providedIn: 'root',\n})\n\n// Classe xkcdService\nexport class XkcdService {\n  private urlDerniere: string =\n    'https://cors.jonathanmartel.info/?url=https://xkcd.com/info.0.json';\n  private urlDebute: string =\n    'https://cors.jonathanmartel.info/?url=https://xkcd.com/';\n  private urlFin: string = '/info.0.json';\n\n  constructor(private http: HttpClient) {}\n/**\n * Fonction qui execute le fetch a la base de donnees et recupere la derniere BD\n * @returns \n */\n  getDerniereBD(): Observable<IBandeDessinee> {\n    console.log('getDerniereBD...');\n    return this.http.get<IBandeDessinee>(this.urlDerniere);\n  }\n\n  getUneBD(num: any): Observable<any> {\n    console.log('getDerniereBD... ID ' + num);\n    return this.http.get<any>(this.urlDebute + num + this.urlFin);\n  }\n\n  getAleatoireBD(): Observable<any> {\n\n    let numAleatoire = Math.floor(Math.random() * 2768) + 1\n\n    console.log('getAleatoireBD... ID: ' + numAleatoire);\n\n    return this.http.get<any>(this.urlDebute + numAleatoire + this.urlFin);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}